name: Update Kustomization Files

on:
  push:
    branches:
      - main
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - '!.github/**'
      - '!**/kustomization.yaml'
  pull_request:
    branches:
      - main
    paths:
      - '**/*.yaml'
      - '**/*.yml'
      - '!.github/**'
      - '!**/kustomization.yaml'
  workflow_dispatch:

jobs:
  update-kustomizations:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update kustomization.yaml files
        run: |
          #!/bin/bash
          set -e
          
          # Function to generate kustomization.yaml for a directory
          generate_kustomization() {
            local dir="$1"
            local kustomization_file="$dir/kustomization.yaml"
            
            echo "Processing directory: $dir"
            
            # Find all YAML files recursively, excluding kustomization.yaml itself
            mapfile -t yaml_files < <(find "$dir" -type f \( -name "*.yaml" -o -name "*.yml" \) ! -name "kustomization.yaml" ! -path "*.github*" 2>/dev/null | sort)
            
            if [ ${#yaml_files[@]} -eq 0 ]; then
              echo "  No YAML files found in $dir, skipping..."
              return
            fi
            
            # Start creating the kustomization.yaml
            cat > "$kustomization_file" << 'EOF'
          # Auto-generated by GitHub Action - Do not edit manually
          # This file is automatically updated when YAML resources change
          apiVersion: kustomize.config.k8s.io/v1beta1
          kind: Kustomization
          
          resources:
          EOF
            
            # Add each YAML file as a resource (relative to the cluster directory)
            for file in "${yaml_files[@]}"; do
              # Get relative path from the cluster directory
              relative_path="${file#$dir/}"
              echo "  - $relative_path" >> "$kustomization_file"
            done
            
            echo "  Generated $kustomization_file with ${#yaml_files[@]} resources"
          }
          
          # Process each cluster directory
          for cluster_dir in */; do
            # Skip hidden directories and .github
            if [[ "$cluster_dir" == .* ]] || [[ "$cluster_dir" == ".github/" ]]; then
              continue
            fi
            
            # Remove trailing slash
            cluster_dir="${cluster_dir%/}"
            
            # Only process if it's a directory and not a symlink
            if [ -d "$cluster_dir" ] && [ ! -L "$cluster_dir" ]; then
              generate_kustomization "$cluster_dir"
            fi
          done
          
          # Check if there are any changes
          if git diff --quiet; then
            echo "No changes to kustomization.yaml files"
            exit 0
          fi
          
          # Show what changed
          echo "Changes detected:"
          git diff --name-only

      - name: Commit and push changes (push event)
        if: github.event_name == 'push'
        run: |
          git add '**/kustomization.yaml'
          if ! git diff --cached --quiet; then
            git commit -m "chore: auto-update kustomization.yaml files

          Auto-generated by GitHub Action based on YAML resources in each cluster directory.
          Triggered by: ${{ github.event_name }} on ${{ github.ref }}"
            git push
          else
            echo "No changes to commit"
          fi

      - name: Commit changes and create PR (pull_request event)
        if: github.event_name == 'pull_request'
        run: |
          git add '**/kustomization.yaml'
          if ! git diff --cached --quiet; then
            BRANCH_NAME="auto-update-kustomizations-${{ github.event.pull_request.number }}"
            git checkout -b "$BRANCH_NAME"
            git commit -m "chore: auto-update kustomization.yaml files for PR #${{ github.event.pull_request.number }}

          Auto-generated by GitHub Action based on YAML resources in each cluster directory."
            git push origin "$BRANCH_NAME"
            
            # Add comment to PR
            gh pr comment ${{ github.event.pull_request.number }} --body "ðŸ¤– **Kustomization files have been automatically updated**

          The following kustomization.yaml files were updated based on the YAML resources in each cluster directory:
          $(git diff --name-only HEAD~1)
          
          Please review the changes in branch: \`$BRANCH_NAME\`"
          else
            echo "No changes to commit"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Manual run - create PR if changes
        if: github.event_name == 'workflow_dispatch'
        run: |
          git add '**/kustomization.yaml'
          if ! git diff --cached --quiet; then
            BRANCH_NAME="auto-update-kustomizations-$(date +%Y%m%d-%H%M%S)"
            git checkout -b "$BRANCH_NAME"
            git commit -m "chore: auto-update kustomization.yaml files

          Auto-generated by GitHub Action (manual trigger).
          Updates kustomization.yaml files in all cluster directories."
            git push origin "$BRANCH_NAME"
            
            # Create PR
            gh pr create \
              --title "chore: auto-update kustomization.yaml files" \
              --body "## ðŸ¤– Automated Kustomization Update

          This PR automatically updates the \`kustomization.yaml\` files in each cluster directory based on the YAML resources present.
          
          ### Changes
          $(git diff --name-only HEAD~1 | sed 's/^/- /')
          
          ### How it works
          - Each cluster directory gets its own \`kustomization.yaml\`
          - The file lists all YAML resources in that directory (recursively)
          - This ensures Flux can discover all resources automatically
          
          ---
          *This PR was created automatically by the update-kustomizations workflow*" \
              --label "automation" \
              --label "kustomization"
          else
            echo "No changes needed"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}